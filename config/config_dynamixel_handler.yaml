# /ns/dyn_handler:
/**:
    ros__parameters:
    # 開発用
        debug: false # true: デバイスとの接続に失敗してもエラーを出力しない/ false: エラーを出力して終了する
        no_use_command_line: false # true: プログラム用のトピックのみ使用する/ false: コマンドライン用のトピックも出力する
        # dummy_servo_id_list: [] # ダミーのサーボを作成する,同じIDのサーボが存在する場合でもダミーが優先される． 
    # 通信機器の設定
        device_name: /dev/ttyUSB0 # 通信するデバイス名
        baudrate: 57600 # 通信速度
        latency_timer: 16 # 通信のインターバル
    # 通信の設定
        dyn_comm/retry_num: 5
        dyn_comm/inerval_msec: 4
        dyn_comm/verbose: false
    # サーボの設定
        init/expected_servo_num: 0
        init/auto_search:
            min_id: 0
            max_id: 30
            retry_times: 3
        init/hardware_error_auto_clean: true # 初期化時に Hardware error を自動でクリアするかどうか
        init/torque_auto_enable: true # 初期化時に Torque を自動でONにするかどうか
        term/torque_auto_disable: true # 終了時に Torque を自動でOFFにするかどうか
    # デフォルト値の設定
        default/profile_acc: 600.0 # deg/s^2
        default/profile_vel: 100.0 # deg/s
    # ループの設定
        loop_rate: 100 # メインループの周期
        verbose_ratio: 300 # メインループのlog出力の割合(処理時間，通信の成功率), ex 100なら100回に1回出力
        pub_outdated_present_value: true # 最新でないpresent_XXXをpublishするかどうか. false ならば 直近のループでreadした Present の要素のみmsgに含められる．
        pub_ratio/present: # present_XXXを読み取る割合
            pwm:                  0 # この回数に一回present_pwmを読み取る
            current:              2 # この回数に一回present_currentを読み取る
            velocity:             2 # この回数に一回present_velocityを読み取る
            position:             2 # この回数に一回present_positionを読み取る
            velocity_trajectory:  0 # この回数に一回velocity_trajectoryを読み取る
            position_trajectory:  0 # この回数に一回position_trajectoryを読み取る
            input_voltage:       29 # この回数に一回present_input_voltageを読み取る
            temperature:         29 # この回数に一回present_temperatureを読み取る
        pub_ratio/status: 47 # この回数に一回 Status を読み取る, 0=初回のみ
        pub_ratio/goal: 11  # この回数に一回 Goal を読み取る, 0=初回のみ
        pub_ratio/gain: 101 # この回数に一回 Gain を読み取る, 0=初回のみ
        pub_ratio/limit: 307 # この回数に一回 Limit を読み取る, 0=初回のみ
        pub_ratio/error: 53 # この回数に一回 Hardware error を読み取る, 0=初回のみ
    # Read/Write方式
        method/fast_read: false
        method/split_read: false
        method/split_write: true
    # デバッグ用
        max_log_width: 6
        verbose/callback: true
        verbose/write_goal: false
        verbose/write_gain: false
        verbose/write_limit: false
        verbose/read_status/raw: false
        verbose/read_status/err: false
        verbose/read_present/raw: false
        verbose/read_present/err: false
        verbose/read_goal/raw: false
        verbose/read_goal/err: false
        verbose/read_gain/raw: false
        verbose/read_gain/err: false
        verbose/read_limit/raw: false
        verbose/read_limit/err: false
        verbose/read_hardware_error: true
    # Optonal機能
        option/external_port:
            use : false # External Portの機能を使うかどうか
            pub_ratio/data : 2   # この回数に一回 Data を読み取る.
            pub_ratio/mode : 100 # この回数に一回 Mode を読み取る, ROM値なので大きくても問題ない．
            verbose/callback: false
            verbose/write: false
            verbose/read/raw: false
            verbose/read/err: false
        option/imu_opencr:
            use : false
            pub_ratio : 2
            verbose/callback: false
            verbose/write: false
            verbose/read/raw: false
            verbose/read/err: false